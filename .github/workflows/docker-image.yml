name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    
env:
  UBUNTU_VERSION: 22.04
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1
  # Until py3.11 is available on all platforms
  LATEST_CUDA: "2.0.1-py3.10-cuda-11.8.0-base-22.04"
  LATEST_ROCM: "2.0.1-py3.10-rocm-5.4.2-runtime-22.04"
  LATEST_CPU: "2.0.1-py3.10-cpu-22.04"

jobs:
  cpu-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        pytorch:
          - "1.13.1"
          - "2.0.1"
        exclude:
          - pytorch: "1.13.1"
            python: "3.11"
    steps:
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          ver_tag="${{ matrix.pytorch }}-py${{ matrix.python }}-cpu-${{ env.UBUNTU_VERSION }}"
          
          if [[ $ver_tag == ${{ env.LATEST_CPU }} ]]; then
              TAGS="${img_path}:latest-cpu, ${img_path}:$ver_tag"
          else
              TAGS="${img_path}:$ver_tag"
          fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.python }}-ubuntu-${{ env.UBUNTU_VERSION }}
            PYTORCH_VERSION=${{ matrix.pytorch }}
          push: true
          # Avoids unknown/unknown architecture and extra metadata
          provenance: false
          tags: ${{ env.TAGS }}
    
  nvidia-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        pytorch:
          - 1.13.1
          - 2.0.1
        cuda:
          - 11.7.1
          - 11.8.0
        level:
          - base
        exclude:
          - pytorch: "1.13.1"
            python: "3.11"
          - pytorch: "1.13.1"
            cuda: "11.8.0"
    steps:
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          ver_tag="${{ matrix.pytorch }}-py${{ matrix.python }}-cuda-${{ matrix.cuda }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}"
          
          if [[ $ver_tag == ${{ env.LATEST_CUDA }} ]]; then
              TAGS="${img_path}:latest, ${img_path}:latest-cuda, ${img_path}:$ver_tag"
          else
              TAGS="${img_path}:$ver_tag"
          fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        needs: set_tags
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.python }}-cuda-${{ matrix.cuda }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}
            PYTORCH_VERSION=${{ matrix.pytorch }}
          push: true
          provenance: false
          tags: ${{ env.TAGS }}

  amd-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        pytorch:
          - "2.0.1"
        rocm:
          - "5.4.2"
        level:
          - runtime
        # Templating for future releases
        exclude:
          - pytorch: "2.0.1"
            python: "3.11"
    steps:
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Set tags
        run: |
          img_path="ghcr.io/${{ env.PACKAGE_NAME }}"
          ver_tag="${{ matrix.pytorch }}-py${{ matrix.python }}-rocm-${{ matrix.rocm }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}"
          
          if [[ $ver_tag == ${{ env.LATEST_ROCM }} ]]; then
              TAGS="${img_path}:latest-rocm, ${img_path}:$ver_tag"
          else
              TAGS="${img_path}:$ver_tag"
          fi
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.python }}-rocm-${{ matrix.rocm }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}
            PYTORCH_VERSION=${{ matrix.pytorch }}
          push: true
          provenance: false
          tags: ${{ env.TAGS }}