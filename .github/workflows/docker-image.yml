name: Docker Image CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    
env:
  UBUNTU_VERSION: 22.04
  BUILDX_NO_DEFAULT_ATTESTATIONS: 1

jobs:
  ubuntu-base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        pytorch:
          - "1.13.1"
          - "2.0.1"
        exclude:
          - pytorch: "1.13.1"
            python: "3.11"
    steps:
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
          echo "TAG=${{ matrix.pytorch }}-py${{ matrix.python }}-ubuntu-${{ env.UBUNTU_VERSION }}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.python }}-ubuntu-${{ env.UBUNTU_VERSION }}
            PYTORCH_VERSION=${{ matrix.pytorch }}
          push: true
          # Avoids unknown/unknown architecture and extra metadata
          provenance: false
          tags: |
            ghcr.io/${{ env.PACKAGE_NAME }}:${{ env.TAG }}
    
  nvidia-base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        pytorch:
          - 1.13.1
          - 2.0.1
        cuda:
          - 11.7.1
          - 11.8.0
        level:
          - base
        exclude:
          - pytorch: "1.13.1"
            python: "3.11"
          - pytorch: "1.13.1"
            cuda: "11.8.0"
    steps:
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
          echo "TAG=${{ matrix.pytorch }}-py${{ matrix.python }}-cuda-${{ matrix.cuda }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.python }}-cuda-${{ matrix.cuda }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}
            PYTORCH_VERSION=${{ matrix.pytorch }}
          push: true
          provenance: false
          tags: |
            ghcr.io/${{ env.PACKAGE_NAME }}:${{ env.TAG }}

  amd-base:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
        pytorch:
          - "2.0.1"
        rocm:
          - "5.4.2"
        level:
          - runtime
        # Templating for future releases
        exclude:
          - pytorch: "2.0.1"
            python: "3.11"
    steps:
      -
        name: Env Setter
        run: |
          echo "PACKAGE_NAME=${GITHUB_REPOSITORY,,}" >> ${GITHUB_ENV}
          echo "TAG=${{ matrix.pytorch }}-py${{ matrix.python }}-rocm-${{ matrix.rocm }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}" >> ${GITHUB_ENV}
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: build
          build-args: |
            IMAGE_BASE=ghcr.io/ai-dock/python:${{ matrix.python }}-rocm-${{ matrix.rocm }}-${{ matrix.level }}-${{ env.UBUNTU_VERSION }}
            PYTORCH_VERSION=${{ matrix.pytorch }}
          push: true
          provenance: false
          tags: |
            ghcr.io/${{ env.PACKAGE_NAME }}:${{ env.TAG }}